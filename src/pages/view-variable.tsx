import type { NextPage } from "next";
import Head from "next/head";
import React, { useEffect, useRef, useState } from 'react';

type ApsimVariable = {
	name?: string | null;
	description?: string | null;
	units?: string | null;
	source: string;
	nextgen?: string;
}

const EditVariables: NextPage = () => {
	const [sorghumVariables, setSorghumVariables] = useState<ApsimVariable[]>([]);
	const [search, setSearch] = useState('');

	const fileInput = useRef<HTMLInputElement>(null);

	const handleFilter = (search: string) => {
		setSearch(search)
	}

	const readFileSuccess = (res) => {
		const data = JSON.parse(res)
		setSorghumVariables(data)
	}

	const handleFileUpload: React.ChangeEventHandler<HTMLInputElement> = (e) => {
		const newFile = e.target?.files?.[0];
		var fileReader = new FileReader();
		fileReader.onload = function (evt) { readFileSuccess(evt.target?.result) };
		fileReader.readAsText(newFile as File);
	}

	return (
		<>
			<Head>
				<title>View Apsim classic variables</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<div className="px-20 mx-auto flex flex-col items-center justify-center min-h-screen py-4">
				<h1 className="md:text-[2rem] leading-normal font-bold text-gray-700">
					View Apsim Classic Variables
				</h1>
				<input id="import-file" ref={fileInput} type="file" className="hidden" onChange={handleFileUpload} />
				<button type='button'
					onClick={() => fileInput.current?.click()}
					className="ml-5 bg-white py-2 px-3 border border-gray-300 rounded-md shadow-sm text-sm leading-4 font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
					Import JSON
				</button>

				{sorghumVariables.length > 0 && <div className="mt-4 w-full">
					<input
						type="text"
						name="nextgen"
						id="nextgen"
						className="w-full mt-2 p-1 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 border-gray-300 border rounded-md"
						value={search}
						onChange={(e) => handleFilter(e.target.value)}
						placeholder="Search for variable name"
					/>
				</div>}

				< ul className="w-full pt-2 mx-auto flex flex-col " >
					{sorghumVariables?.map((line, index) => (
						line.name && line.name.toLowerCase().includes(search.toLowerCase()) ? (
							<li key={index} className="p-2 relative border flex-row" >
								{line.name &&
									<div className="flex flex-col">
										<div className="flex flex-row">
											<div className="flex-col w-2/5">
												<div className="p-1 font-semibold">{line.name} <b className="italic l-4 text-gray-400 font-normal">{line.units ? "(" + line.units + ")" : null}</b></div>
											</div>
											<div className="w-3/5 flex-col">
												<input disabled type="text" name="nextgen" id="nextgen" className="cursor-not-allowed w-full p-1 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 border-gray-300 border rounded-md"
													value={line.nextgen}
												/>
											</div>
										</div>
										<div className="basis-1/2 p-1 text-gray-600">{line.description ? line.description : null}</div>
									</div>
								}
							</li>
						) : (
							!search && (<li key={index} className="p-2 relative border flex-row" >
								<div className="p-1 italic">{line.source}</div>
							</li>)
						)
					))
					}
				</ul>
			</div>
		</>
	);
};

export default EditVariables;
