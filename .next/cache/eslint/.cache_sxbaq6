[{"/home/reality/workspace/Apsim.Variables/src/pages/_app.tsx":"1","/home/reality/workspace/Apsim.Variables/src/pages/index.tsx":"2","/home/reality/workspace/Apsim.Variables/src/pages/nextgen-edit.tsx":"3","/home/reality/workspace/Apsim.Variables/src/pages/parse.tsx":"4"},{"size":212,"mtime":1660535565098,"results":"5","hashOfConfig":"6"},{"size":1929,"mtime":1660536934548,"results":"7","hashOfConfig":"6"},{"size":3644,"mtime":1660539790508,"results":"8","hashOfConfig":"6"},{"size":4582,"mtime":1660535565098,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eld2p7",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/reality/workspace/Apsim.Variables/src/pages/_app.tsx",[],[],"/home/reality/workspace/Apsim.Variables/src/pages/index.tsx",[],[],"/home/reality/workspace/Apsim.Variables/src/pages/nextgen-edit.tsx",["23"],[],"import { setDefaultResultOrder } from \"dns\";\nimport type { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport React, { useEffect } from 'react';\nimport sorghumData from '../data/sorghum.json';\n\ntype ApsimVariable = {\n  name?: string | null;\n  description?: string | null;\n  units?: string | null;\n  source: string;\n  nextgen?: string;\n}\n\nconst EditVariables: NextPage = () => {\n  const [areaText, setAreaText] = React.useState('Paste text here');\n  const [sorghumVariables, setSorghumVariables] = React.useState<ApsimVariable[]>([]);\n\n  React.useEffect(() => {\n    console.log('data', sorghumVariables);\n\n    setSorghumVariables(sorghumData);\n  }, [])\n\n  const downloadFile = ({ data, fileName, fileType }) => {\n    // Create a blob with the data we want to download as a file\n    const blob = new Blob([data], { type: fileType })\n    // Create an anchor element and dispatch a click event on it\n    // to trigger a download\n    const a = document.createElement('a')\n    a.download = fileName\n    a.href = window.URL.createObjectURL(blob)\n    const clickEvt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n    a.dispatchEvent(clickEvt)\n    a.remove()\n  }\n\n  const exportToJson = e => {\n    e.preventDefault()\n    downloadFile({\n      data: JSON.stringify(sorghumVariables),\n      fileName: 'sorghum.json',\n      fileType: 'text/json',\n    })\n  }\n\n  return (\n    <>\n      <Head>\n        <title>Parse Apsim classic variables</title>\n        <meta name=\"description\" content=\"Generated by create-t3-app\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <main className=\"container mx-auto flex flex-col items-center justify-center min-h-screen p-4\">\n        <h1 className=\"md:text-[2rem] leading-normal font-bold text-gray-700\">\n          Edit Apsim Classic Variables\n        </h1>\n        <button type='button' onClick={exportToJson}\n          className=\"ml-5 bg-white py-2 px-3 border border-gray-300 rounded-md shadow-sm text-sm leading-4 font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n          Export to JSON\n        </button>\n        <ul className=\"w-full pt-2 container mx-auto flex flex-col \">\n          {sorghumVariables?.map((line, index) =>\n            <li key={index} className=\"p-2 relative border flex-row\" >\n              {line.name ?\n                <div className=\"flex flex-col\">\n                  <div className=\"flex flex-row\">\n                    <div className=\"flex-col w-1/4\">\n                      <div className=\"p-1 font-semibold\">{line.name}</div>\n                      <div className=\"p-1 italic l-4 text-gray-400\"> {line.units ? line.units : null}</div>\n                    </div>\n                    <div className=\"w-3/4 flex-col\">\n                      <label htmlFor=\"nextgen\" className=\"p-1 block\">Apsim NextGen Reference</label>\n                      <input type=\"text\" name=\"nextgen\" id=\"nextgen\" className=\"w-full p-1 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 border-gray-300 border rounded-md\"\n                        value={line.nextgen} onChange={(e) => {\n                          line.nextgen = e.target.value;\n                        }} />\n                    </div>\n                  </div>\n                  <div className=\"basis-1/2 p-1 text-gray-600\">{line.description ? line.description : null}</div>\n                </div>\n                :\n                <div className=\"p-1 italic\">{line.source}</div>\n              }\n            </li>\n          )}\n        </ul>\n      </main>\n    </>\n  );\n};\n\nexport default EditVariables;\n","/home/reality/workspace/Apsim.Variables/src/pages/parse.tsx",[],[],{"ruleId":"24","severity":1,"message":"25","line":23,"column":6,"nodeType":"26","endLine":23,"endColumn":8,"suggestions":"27"},"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'sorghumVariables'. Either include it or remove the dependency array.","ArrayExpression",["28"],{"desc":"29","fix":"30"},"Update the dependencies array to be: [sorghumVariables]",{"range":"31","text":"32"},[658,660],"[sorghumVariables]"]